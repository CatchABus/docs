{
  "title": "EditableTextBase",
  "hierarchy": [
    [
      {
        "text": "TextBase",
        "link": "/api/class/TextBase"
      }
    ],
    [
      {
        "text": "EditableTextBase"
      }
    ],
    [
      {
        "text": "TextField",
        "link": "/api/class/TextField"
      },
      {
        "text": "TextView",
        "link": "/api/class/TextView"
      }
    ]
  ],
  "summary": [
    {
      "title": "Constructors",
      "items": [
        33600
      ]
    },
    {
      "title": "Properties",
      "items": [
        33684,
        34081,
        33980,
        34071,
        34073,
        34121,
        34122,
        34120,
        34119,
        34070,
        34102,
        34072,
        33982,
        34123,
        34080,
        34101,
        34098,
        34100,
        34099,
        34074,
        34079,
        33524,
        33526,
        33525,
        33671,
        33677,
        33672,
        33675,
        33679,
        33678,
        33680,
        33554,
        33673,
        33674,
        33676,
        33670,
        34097,
        33651,
        33687,
        33686,
        33605,
        33608,
        33606,
        33685,
        33688,
        33689,
        33690,
        33653,
        33518,
        33657,
        33668,
        33667,
        33662,
        33654,
        33658,
        33663,
        33664,
        33656,
        33661,
        33655,
        33665,
        33666,
        33660,
        33659,
        33691,
        34067,
        34088,
        33669,
        34091,
        34089,
        34092,
        33557,
        33722,
        33723,
        33721,
        33558,
        34086,
        34060,
        33607,
        34117,
        34118,
        34116,
        34115,
        34106,
        34084,
        34109,
        34110,
        34108,
        34107,
        34104,
        34103,
        34113,
        34114,
        34112,
        34111,
        34085,
        34105,
        34094,
        34095,
        34096,
        33519,
        33627,
        33626,
        33695,
        33609,
        33701,
        34066,
        33978,
        33652,
        33681,
        33683,
        33682,
        33719,
        33717,
        33718,
        34065,
        33715,
        33720,
        33716,
        33602,
        33521,
        34082,
        33628,
        33629,
        33555,
        33696,
        33700,
        33697,
        33699,
        33698,
        33610,
        33635,
        33693,
        33692,
        33817,
        33624,
        34063,
        33704,
        34093,
        33713,
        33714,
        33636,
        33637,
        33638,
        33639,
        33640,
        34064,
        33708,
        33559,
        34061,
        33603,
        34125,
        33705,
        33706,
        33707,
        34087,
        34090,
        33711,
        33712,
        34069,
        34068,
        33522,
        33523,
        33976,
        33625,
        33630,
        33520,
        33631,
        33633,
        33632,
        34083,
        33977,
        33979,
        33981,
        33709,
        33710,
        33556,
        33604,
        33611,
        33702,
        34062,
        33703,
        33634,
        33694
      ]
    },
    {
      "title": "Accessors",
      "items": [
        34038,
        34042,
        34034,
        34142,
        34140,
        34130,
        34154,
        34126,
        34136,
        34134
      ]
    },
    {
      "title": "Methods",
      "items": [
        34195,
        34199,
        34240,
        34247,
        34172,
        34237,
        33854,
        34298,
        34266,
        33858,
        34303,
        33852,
        33856,
        33969,
        33951,
        33966,
        34022,
        34263,
        34164,
        33988,
        33962,
        33964,
        34268,
        33864,
        34254,
        34028,
        34032,
        34030,
        34211,
        34214,
        34244,
        34169,
        33985,
        34223,
        33972,
        34206,
        34018,
        34166,
        34234,
        33957,
        33879,
        33882,
        33996,
        33592,
        34182,
        33818,
        34188,
        34178,
        34180,
        34015,
        33550,
        33821,
        34217,
        34185,
        34231,
        33615,
        34219,
        34048,
        33870,
        34156,
        33761,
        34271,
        33838,
        33763,
        33831,
        33833,
        33835,
        33737,
        33739,
        33735,
        33824,
        34150,
        34146,
        33866,
        34295,
        34221,
        33728,
        33536,
        33755,
        34203,
        33724,
        33527,
        34286,
        34290,
        33766,
        33576,
        33774,
        33560,
        33840,
        34278,
        33568,
        33745,
        33983,
        33741,
        34257,
        34162,
        34004,
        33584,
        34046,
        34054,
        33544,
        33876,
        34158,
        34251,
        33751,
        34228,
        33868,
        34274,
        33620,
        34056,
        34012,
        34259,
        34192,
        34208
      ]
    }
  ],
  "reflections": {
    "33518": {
      "name": "blurEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#blurevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "signatures": [
        {
          "code": "blurEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 12,
              "character": 15
            }
          ],
          "url": "/api/class/EditableTextBase#blurevent"
        }
      ]
    },
    "33519": {
      "name": "focusEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#focusevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "signatures": [
        {
          "code": "focusEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 13,
              "character": 15
            }
          ],
          "url": "/api/class/EditableTextBase#focusevent"
        }
      ]
    },
    "33520": {
      "name": "textChangeEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#textchangeevent",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "signatures": [
        {
          "code": "textChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 14,
              "character": 15
            }
          ],
          "url": "/api/class/EditableTextBase#textchangeevent"
        }
      ]
    },
    "33521": {
      "name": "layoutChangedEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#layoutchangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to layoutChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "layoutChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 108,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to layoutChanged event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#layoutchangedevent"
        }
      ]
    },
    "33522": {
      "name": "showingModallyEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#showingmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to showingModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "showingModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 112,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to showingModally event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#showingmodallyevent"
        }
      ]
    },
    "33523": {
      "name": "shownModallyEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#shownmodallyevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to shownModally event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "shownModallyEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 117,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to shownModally event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#shownmodallyevent"
        }
      ]
    },
    "33524": {
      "name": "accessibilityBlurEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityblurevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityBlur event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityBlurEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 122,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityBlur event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityblurevent"
        }
      ]
    },
    "33525": {
      "name": "accessibilityFocusEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityfocusevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocus event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityFocusEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 127,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocus event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityfocusevent"
        }
      ]
    },
    "33526": {
      "name": "accessibilityFocusChangedEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityfocuschangedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to accessibilityFocusChanged event."
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityFocusChangedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 132,
              "character": 15
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to accessibilityFocusChanged event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityfocuschangedevent"
        }
      ]
    },
    "33527": {
      "name": "measureChild",
      "type": "Method",
      "url": "/api/class/EditableTextBase#measurechild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measureChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, widthMeasureSpec: number, heightMeasureSpec: number): {\n  measuredHeight: number\n}",
          "url": "/api/class/EditableTextBase#measurechild-measurechild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 565,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure a child by taking into account its margins and a given measureSpecs."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The view to be measured."
                  }
                ]
              }
            },
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {}
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "{\n  measuredHeight: number\n}"
        }
      ]
    },
    "33536": {
      "name": "layoutChild",
      "type": "Method",
      "url": "/api/class/EditableTextBase#layoutchild",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutChild(parent: <a href=\"/api/class/View\">View</a>, child: <a href=\"/api/class/View\">View</a>, left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/EditableTextBase#layoutchild-layoutchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 575,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Layout a child by taking into account its margins, horizontal and vertical alignments and a given bounds."
              }
            ]
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This parameter is not used. You can pass null."
                  }
                ]
              }
            },
            {
              "name": "child",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            },
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33544": {
      "name": "resolveSizeAndState",
      "type": "Method",
      "url": "/api/class/EditableTextBase#resolvesizeandstate",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resolveSizeAndState(\n  size: number,\n  specSize: number,\n  specMode: number,\n  childMeasuredState: number\n): number",
          "url": "/api/class/EditableTextBase#resolvesizeandstate-resolvesizeandstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 585,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Utility to reconcile a desired size and state, with constraints imposed\nby a MeasureSpec.  Will take the desired size, unless a different size\nis imposed by the constraints.  The returned value is a compound integer,\nwith the resolved size in the MEASURED_SIZE_MASK bits and\noptionally the bit MEASURED_STATE_TOO_SMALL set if the resulting\nsize is smaller than the size the view wants to be."
              }
            ]
          },
          "parameters": [
            {
              "name": "size",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specSize",
              "type": "number",
              "flags": {}
            },
            {
              "name": "specMode",
              "type": "number",
              "flags": {}
            },
            {
              "name": "childMeasuredState",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "33550": {
      "name": "combineMeasuredStates",
      "type": "Method",
      "url": "/api/class/EditableTextBase#combinemeasuredstates",
      "flags": {
        "isPublic": true,
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "combineMeasuredStates(curState: number, newState: any): number",
          "url": "/api/class/EditableTextBase#combinemeasuredstates-combinemeasuredstates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 587,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "curState",
              "type": "number",
              "flags": {}
            },
            {
              "name": "newState",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "number"
        }
      ]
    },
    "33554": {
      "name": "accessibilityPerformEscapeEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityperformescapeevent",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityPerformEscapeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 24,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#accessibilityperformescapeevent"
        }
      ]
    },
    "33555": {
      "name": "loadedEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#loadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to loaded event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "loadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 127,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to loaded event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#loadedevent"
        }
      ]
    },
    "33556": {
      "name": "unloadedEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#unloadedevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to unloaded event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "unloadedEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 131,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to unloaded event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#unloadedevent"
        }
      ]
    },
    "33557": {
      "name": "createdEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#createdevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to creation event"
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "createdEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 135,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to creation event"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#createdevent"
        }
      ]
    },
    "33558": {
      "name": "disposeNativeViewEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#disposenativeviewevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to disposeNativeView event"
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "disposeNativeViewEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 139,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to disposeNativeView event"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#disposenativeviewevent"
        }
      ]
    },
    "33559": {
      "name": "propertyChangeEvent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#propertychangeevent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "String value used when hooking to propertyChange event."
          }
        ]
      },
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "propertyChangeEvent: string",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 74,
              "character": 11
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "String value used when hooking to propertyChange event."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#propertychangeevent"
        }
      ]
    },
    "33560": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/EditableTextBase#on-7",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventName: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#on-7-on-8",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 125,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33568": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/EditableTextBase#once-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(eventName: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#once-2-once-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 126,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33576": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/EditableTextBase#off-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventName: string, callback?: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#off-2-off-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 127,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33584": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(eventName: string, callback?: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#removeeventlistener-2-removeeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 128,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33592": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addeventlistener-2",
      "flags": {
        "isStatic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(eventName: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#addeventlistener-2-addeventlistener-3",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 129,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33600": {
      "name": "constructor",
      "type": "Constructor",
      "url": "/api/class/EditableTextBase#constructor",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "ConstructorSignature",
          "code": "new EditableTextBase(): <a href=\"/api/class/EditableTextBase\">EditableTextBase</a>",
          "url": "/api/class/EditableTextBase#constructor-new-editabletextbase",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 263,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/EditableTextBase\">EditableTextBase</a>"
        }
      ]
    },
    "33602": {
      "name": "keyboardType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#keyboardtype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the soft keyboard type."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "keyboardType: <a href=\"/api/namespace/CoreTypes#keyboardinputtype\">KeyboardInputType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 19,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the soft keyboard type."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#keyboardtype"
        }
      ]
    },
    "33603": {
      "name": "returnKeyType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#returnkeytype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the soft keyboard return key flavor."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "returnKeyType: <a href=\"/api/namespace/CoreTypes#returnkeybuttontype\">ReturnKeyButtonType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the soft keyboard return key flavor."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#returnkeytype"
        }
      ]
    },
    "33604": {
      "name": "updateTextTrigger",
      "type": "Property",
      "url": "/api/class/EditableTextBase#updatetexttrigger",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating when the text property will be updated."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "updateTextTrigger: <a href=\"/api/namespace/CoreTypes#updatetexttriggertype\">UpdateTextTriggerType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 29,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating when the text property will be updated."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#updatetexttrigger"
        }
      ]
    },
    "33605": {
      "name": "autocapitalizationType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#autocapitalizationtype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the autocapitalization type."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "autocapitalizationType: <a href=\"/api/namespace/CoreTypes#autocapitalizationinputtype\">AutocapitalizationInputType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the autocapitalization type."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#autocapitalizationtype"
        }
      ]
    },
    "33606": {
      "name": "autofillType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#autofilltype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the autofill type."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "autofillType: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 39,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the autofill type."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#autofilltype"
        }
      ]
    },
    "33607": {
      "name": "editable",
      "type": "Property",
      "url": "/api/class/EditableTextBase#editable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets whether the instance is editable."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "editable: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 44,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets whether the instance is editable."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#editable"
        }
      ]
    },
    "33608": {
      "name": "autocorrect",
      "type": "Property",
      "url": "/api/class/EditableTextBase#autocorrect",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables autocorrection."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "autocorrect: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables autocorrection."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#autocorrect"
        }
      ]
    },
    "33609": {
      "name": "hint",
      "type": "Property",
      "url": "/api/class/EditableTextBase#hint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the placeholder text."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "hint: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 54,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the placeholder text."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#hint"
        }
      ]
    },
    "33610": {
      "name": "maxLength",
      "type": "Property",
      "url": "/api/class/EditableTextBase#maxlength",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Limits input to a certain number of characters."
          }
        ]
      },
      "flags": {},
      "signatures": [
        {
          "code": "maxLength: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 59,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Limits input to a certain number of characters."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#maxlength"
        }
      ]
    },
    "33611": {
      "name": "valueFormatter",
      "type": "Property",
      "url": "/api/class/EditableTextBase#valueformatter",
      "flags": {},
      "signatures": [
        {
          "code": "valueFormatter: (value: string) => string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 65,
              "character": 1
            }
          ],
          "url": "/api/class/EditableTextBase#valueformatter"
        }
      ]
    },
    "33615": {
      "name": "dismissSoftInput",
      "type": "Method",
      "url": "/api/class/EditableTextBase#dismisssoftinput",
      "flags": {},
      "signatures": [
        {
          "type": "CallSignature",
          "code": "dismissSoftInput(): void",
          "url": "/api/class/EditableTextBase#dismisssoftinput-dismisssoftinput-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 70,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hides the soft input method, ususally a soft keyboard."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33620": {
      "name": "setSelection",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setselection",
      "flags": {
        "isPublic": true
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setSelection(start: number, stop?: number): any",
          "url": "/api/class/EditableTextBase#setselection-setselection-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/editable-text-base/index.d.ts",
              "line": 82,
              "character": 1
            }
          ],
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the selection anchor to start and the selection edge to stop"
              }
            ]
          },
          "parameters": [
            {
              "name": "start",
              "type": "number",
              "flags": {}
            },
            {
              "name": "stop",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "33624": {
      "name": "nativeTextViewProtected",
      "type": "Property",
      "url": "/api/class/EditableTextBase#nativetextviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
          }
        ]
      },
      "flags": {
        "isPublic": true,
        "isReadonly": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "nativeTextViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 14,
              "character": 17
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets of the text widget. In some cases(android TextInputLayout) the TextView is made of 2 views: the layout and the text view\nSo we need a different getter for the layout and text functions"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#nativetextviewprotected"
        }
      ]
    },
    "33625": {
      "name": "text",
      "type": "Property",
      "url": "/api/class/EditableTextBase#text",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the text."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "text: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 19,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the text."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#text"
        }
      ]
    },
    "33626": {
      "name": "formattedText",
      "type": "Property",
      "url": "/api/class/EditableTextBase#formattedtext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a formatted string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "formattedText: <a href=\"/api/class/FormattedString\">FormattedString</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 24,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a formatted string."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#formattedtext"
        }
      ]
    },
    "33627": {
      "name": "fontSize",
      "type": "Property",
      "url": "/api/class/EditableTextBase#fontsize",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets font-size style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "fontSize: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 29,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets font-size style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#fontsize"
        }
      ]
    },
    "33628": {
      "name": "letterSpacing",
      "type": "Property",
      "url": "/api/class/EditableTextBase#letterspacing",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets letterSpace style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "letterSpacing: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 34,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets letterSpace style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#letterspacing"
        }
      ]
    },
    "33629": {
      "name": "lineHeight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#lineheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets lineHeight style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "lineHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 39,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets lineHeight style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#lineheight"
        }
      ]
    },
    "33630": {
      "name": "textAlignment",
      "type": "Property",
      "url": "/api/class/EditableTextBase#textalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text-alignment style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textAlignment: <a href=\"/api/namespace/CoreTypes#textalignmenttype\">TextAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 44,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text-alignment style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#textalignment"
        }
      ]
    },
    "33631": {
      "name": "textDecoration",
      "type": "Property",
      "url": "/api/class/EditableTextBase#textdecoration",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text decorations style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textDecoration: <a href=\"/api/namespace/CoreTypes#textdecorationtype\">TextDecorationType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 49,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text decorations style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#textdecoration"
        }
      ]
    },
    "33632": {
      "name": "textTransform",
      "type": "Property",
      "url": "/api/class/EditableTextBase#texttransform",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text transform style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textTransform: <a href=\"/api/namespace/CoreTypes#texttransformtype\">TextTransformType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 54,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text transform style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#texttransform"
        }
      ]
    },
    "33633": {
      "name": "textShadow",
      "type": "Property",
      "url": "/api/class/EditableTextBase#textshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets text shadow style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "textShadow: CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 59,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets text shadow style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#textshadow"
        }
      ]
    },
    "33634": {
      "name": "whiteSpace",
      "type": "Property",
      "url": "/api/class/EditableTextBase#whitespace",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets white space style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "whiteSpace: <a href=\"/api/namespace/CoreTypes#whitespacetype\">WhiteSpaceType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 64,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets white space style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#whitespace"
        }
      ]
    },
    "33635": {
      "name": "maxLines",
      "type": "Property",
      "url": "/api/class/EditableTextBase#maxlines",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets white space style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "maxLines: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 69,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets white space style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#maxlines"
        }
      ]
    },
    "33636": {
      "name": "padding",
      "type": "Property",
      "url": "/api/class/EditableTextBase#padding",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets padding style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "padding: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 74,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets padding style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#padding"
        }
      ]
    },
    "33637": {
      "name": "paddingBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#paddingbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the bottom padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingBottom: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 79,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the bottom padding of this layout."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#paddingbottom"
        }
      ]
    },
    "33638": {
      "name": "paddingLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#paddingleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the left padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingLeft: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 84,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the left padding of this layout."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#paddingleft"
        }
      ]
    },
    "33639": {
      "name": "paddingRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#paddingright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the right padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingRight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 89,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the right padding of this layout."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#paddingright"
        }
      ]
    },
    "33640": {
      "name": "paddingTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#paddingtop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specify the top padding of this layout."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "paddingTop: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/text-base/index.d.ts",
              "line": 94,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify the top padding of this layout."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#paddingtop"
        }
      ]
    },
    "33651": {
      "name": "android",
      "type": "Property",
      "url": "/api/class/EditableTextBase#android",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the android-specific native instance that lies behind this proxy. Will be available if running on an Android platform."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "android: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 138,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the android-specific native instance that lies behind this proxy. Will be available if running on an Android platform."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#android"
        }
      ]
    },
    "33652": {
      "name": "ios",
      "type": "Property",
      "url": "/api/class/EditableTextBase#ios",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the ios-specific native instance that lies behind this proxy. Will be available if running on an iOS platform."
          }
        ]
      },
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "ios: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 144,
              "character": 8
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the ios-specific native instance that lies behind this proxy. Will be available if running on an iOS platform."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#ios"
        }
      ]
    },
    "33653": {
      "name": "bindingContext",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bindingcontext",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "bindingContext: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 149,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the binding context of this instance. This object is used as a source for each Binding that does not have a source object specified."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bindingcontext"
        }
      ]
    },
    "33654": {
      "name": "borderColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordercolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 154,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordercolor"
        }
      ]
    },
    "33655": {
      "name": "borderTopColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordertopcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 159,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordertopcolor"
        }
      ]
    },
    "33656": {
      "name": "borderRightColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderrightcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderRightColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 164,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderrightcolor"
        }
      ]
    },
    "33657": {
      "name": "borderBottomColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderbottomcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 169,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderbottomcolor"
        }
      ]
    },
    "33658": {
      "name": "borderLeftColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderleftcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderLeftColor: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 174,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderleftcolor"
        }
      ]
    },
    "33659": {
      "name": "borderWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderWidth: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 179,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderwidth"
        }
      ]
    },
    "33660": {
      "name": "borderTopWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordertopwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 184,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordertopwidth"
        }
      ]
    },
    "33661": {
      "name": "borderRightWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderrightwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the right border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderRightWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 189,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the right border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderrightwidth"
        }
      ]
    },
    "33662": {
      "name": "borderBottomWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderbottomwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 194,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderbottomwidth"
        }
      ]
    },
    "33663": {
      "name": "borderLeftWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderleftwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the left border width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderLeftWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 199,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the left border width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderleftwidth"
        }
      ]
    },
    "33664": {
      "name": "borderRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderRadius: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 204,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderradius"
        }
      ]
    },
    "33665": {
      "name": "borderTopLeftRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordertopleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 209,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top left border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordertopleftradius"
        }
      ]
    },
    "33666": {
      "name": "borderTopRightRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#bordertoprightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the top right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderTopRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 214,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the top right border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#bordertoprightradius"
        }
      ]
    },
    "33667": {
      "name": "borderBottomRightRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderbottomrightradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom right border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomRightRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 219,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom right border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderbottomrightradius"
        }
      ]
    },
    "33668": {
      "name": "borderBottomLeftRadius",
      "type": "Property",
      "url": "/api/class/EditableTextBase#borderbottomleftradius",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the bottom left border radius of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "borderBottomLeftRadius: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 224,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the bottom left border radius of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#borderbottomleftradius"
        }
      ]
    },
    "33669": {
      "name": "color",
      "type": "Property",
      "url": "/api/class/EditableTextBase#color",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "color: <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 229,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#color"
        }
      ]
    },
    "33670": {
      "name": "accessible",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessible",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "If "
          },
          {
            "kind": "code",
            "text": "`true`"
          },
          {
            "kind": "text",
            "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessible: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 234,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If "
              },
              {
                "kind": "code",
                "text": "`true`"
              },
              {
                "kind": "text",
                "text": " the element is an accessibility element and all the children will be treated as a single selectable component."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessible"
        }
      ]
    },
    "33671": {
      "name": "accessibilityHidden",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityhidden",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Hide the view and its children from the a11y service"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityHidden: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 239,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the view and its children from the a11y service"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityhidden"
        }
      ]
    },
    "33672": {
      "name": "accessibilityIdentifier",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityidentifier",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityIdentifier: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 246,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The view's unique accessibilityIdentifier.\n\nThis is used for automated testing."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityidentifier"
        }
      ]
    },
    "33673": {
      "name": "accessibilityRole",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityrole",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which role should this view be treated by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityRole: <a href=\"/api/enum/AccessibilityRole\">AccessibilityRole</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 251,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which role should this view be treated by the a11y service?"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityrole"
        }
      ]
    },
    "33674": {
      "name": "accessibilityState",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilitystate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Which state should this view be treated as by the a11y service?"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityState: <a href=\"/api/enum/AccessibilityState\">AccessibilityState</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 256,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Which state should this view be treated as by the a11y service?"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilitystate"
        }
      ]
    },
    "33675": {
      "name": "accessibilityLabel",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilitylabel",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Short description of the element, ideally one word."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLabel: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 261,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Short description of the element, ideally one word."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilitylabel"
        }
      ]
    },
    "33676": {
      "name": "accessibilityValue",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityvalue",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Current value of the element in a localized string."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityValue: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 266,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Current value of the element in a localized string."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityvalue"
        }
      ]
    },
    "33677": {
      "name": "accessibilityHint",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityhint",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityHint: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 271,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A hint describes the elements behavior. Example: 'Tap change playback speed'"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilityhint"
        }
      ]
    },
    "33678": {
      "name": "accessibilityLiveRegion",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilityliveregion",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLiveRegion: <a href=\"/api/enum/AccessibilityLiveRegion\">AccessibilityLiveRegion</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 272,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#accessibilityliveregion"
        }
      ]
    },
    "33679": {
      "name": "accessibilityLanguage",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilitylanguage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityLanguage: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 278,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the language in which to speak the element's label and value.\nAccepts language ID tags that follows the \"BCP 47\" specification."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilitylanguage"
        }
      ]
    },
    "33680": {
      "name": "accessibilityMediaSession",
      "type": "Property",
      "url": "/api/class/EditableTextBase#accessibilitymediasession",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "This view starts a media session. Equivalent to trait = startsMedia"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "accessibilityMediaSession: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 283,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This view starts a media session. Equivalent to trait = startsMedia"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#accessibilitymediasession"
        }
      ]
    },
    "33681": {
      "name": "iosAccessibilityAdjustsFontSize",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iosaccessibilityadjustsfontsize",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Defines whether accessibility font scale should affect font size."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosAccessibilityAdjustsFontSize: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 288,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines whether accessibility font scale should affect font size."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iosaccessibilityadjustsfontsize"
        }
      ]
    },
    "33682": {
      "name": "iosAccessibilityMinFontScale",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iosaccessibilityminfontscale",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum accessibility font scale."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosAccessibilityMinFontScale: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 293,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum accessibility font scale."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iosaccessibilityminfontscale"
        }
      ]
    },
    "33683": {
      "name": "iosAccessibilityMaxFontScale",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iosaccessibilitymaxfontscale",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the maximum accessibility font scale."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosAccessibilityMaxFontScale: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 298,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the maximum accessibility font scale."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iosaccessibilitymaxfontscale"
        }
      ]
    },
    "33684": {
      "name": "_androidContentDescriptionUpdated",
      "type": "Property",
      "url": "/api/class/EditableTextBase#androidcontentdescriptionupdated",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
          }
        ]
      },
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_androidContentDescriptionUpdated?: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 303,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal use only. This is used to limit the number of updates to android.view.View.setContentDescription()"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#androidcontentdescriptionupdated"
        }
      ]
    },
    "33685": {
      "name": "automationText",
      "type": "Property",
      "url": "/api/class/EditableTextBase#automationtext",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "automationText: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 305,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#automationtext"
        }
      ]
    },
    "33686": {
      "name": "androidElevation",
      "type": "Property",
      "url": "/api/class/EditableTextBase#androidelevation",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the elevation of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "androidElevation: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 310,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the elevation of the android view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#androidelevation"
        }
      ]
    },
    "33687": {
      "name": "androidDynamicElevationOffset",
      "type": "Property",
      "url": "/api/class/EditableTextBase#androiddynamicelevationoffset",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the dynamic elevation offset of the android view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "androidDynamicElevationOffset: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 315,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the dynamic elevation offset of the android view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#androiddynamicelevationoffset"
        }
      ]
    },
    "33688": {
      "name": "background",
      "type": "Property",
      "url": "/api/class/EditableTextBase#background",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "background: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 320,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#background"
        }
      ]
    },
    "33689": {
      "name": "backgroundColor",
      "type": "Property",
      "url": "/api/class/EditableTextBase#backgroundcolor",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background color of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "backgroundColor: string | <a href=\"/api/class/Color\">Color</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 325,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background color of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#backgroundcolor"
        }
      ]
    },
    "33690": {
      "name": "backgroundImage",
      "type": "Property",
      "url": "/api/class/EditableTextBase#backgroundimage",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the background image of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "backgroundImage: string | LinearGradient",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 330,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the background image of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#backgroundimage"
        }
      ]
    },
    "33691": {
      "name": "boxShadow",
      "type": "Property",
      "url": "/api/class/EditableTextBase#boxshadow",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the box shadow of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "boxShadow: string | CSSShadow",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 335,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the box shadow of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#boxshadow"
        }
      ]
    },
    "33692": {
      "name": "minWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#minwidth",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum width the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "minWidth: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 340,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum width the view may grow to."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#minwidth"
        }
      ]
    },
    "33693": {
      "name": "minHeight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#minheight",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the minimum height the view may grow to."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "minHeight: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 345,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the minimum height the view may grow to."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#minheight"
        }
      ]
    },
    "33694": {
      "name": "width",
      "type": "Property",
      "url": "/api/class/EditableTextBase#width",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired width of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "width: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 350,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired width of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#width"
        }
      ]
    },
    "33695": {
      "name": "height",
      "type": "Property",
      "url": "/api/class/EditableTextBase#height",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the desired height of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "height: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 355,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the desired height of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#height"
        }
      ]
    },
    "33696": {
      "name": "margin",
      "type": "Property",
      "url": "/api/class/EditableTextBase#margin",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets margin style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "margin: string | number | <a href=\"/api/namespace/CoreTypes#lengthdipunit\">LengthDipUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpxunit\">LengthPxUnit</a> | <a href=\"/api/namespace/CoreTypes#lengthpercentunit\">LengthPercentUnit</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 360,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets margin style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#margin"
        }
      ]
    },
    "33697": {
      "name": "marginLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#marginleft",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the left side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginLeft: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 365,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the left side of this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#marginleft"
        }
      ]
    },
    "33698": {
      "name": "marginTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#margintop",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the top side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginTop: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 370,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the top side of this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#margintop"
        }
      ]
    },
    "33699": {
      "name": "marginRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#marginright",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the right side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginRight: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 375,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the right side of this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#marginright"
        }
      ]
    },
    "33700": {
      "name": "marginBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#marginbottom",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Specifies extra space on the bottom side of this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "marginBottom: <a href=\"/api/namespace/CoreTypes#percentlengthtype\">PercentLengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 380,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specifies extra space on the bottom side of this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#marginbottom"
        }
      ]
    },
    "33701": {
      "name": "horizontalAlignment",
      "type": "Property",
      "url": "/api/class/EditableTextBase#horizontalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "horizontalAlignment: <a href=\"/api/namespace/CoreTypes#horizontalalignmenttype\">HorizontalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 385,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Horizontal axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#horizontalalignment"
        }
      ]
    },
    "33702": {
      "name": "verticalAlignment",
      "type": "Property",
      "url": "/api/class/EditableTextBase#verticalalignment",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "verticalAlignment: <a href=\"/api/namespace/CoreTypes#verticalalignmenttype\">VerticalAlignmentType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 390,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the alignment of this view within its parent along the Vertical axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#verticalalignment"
        }
      ]
    },
    "33703": {
      "name": "visibility",
      "type": "Property",
      "url": "/api/class/EditableTextBase#visibility",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the visibility of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "visibility: <a href=\"/api/namespace/CoreTypes#visibilitytype\">VisibilityType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 395,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the visibility of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#visibility"
        }
      ]
    },
    "33704": {
      "name": "opacity",
      "type": "Property",
      "url": "/api/class/EditableTextBase#opacity",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the opacity style property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "opacity: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 400,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the opacity style property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#opacity"
        }
      ]
    },
    "33705": {
      "name": "rotate",
      "type": "Property",
      "url": "/api/class/EditableTextBase#rotate",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Z axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rotate: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 405,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Z axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#rotate"
        }
      ]
    },
    "33706": {
      "name": "rotateX",
      "type": "Property",
      "url": "/api/class/EditableTextBase#rotatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the X axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rotateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 410,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the X axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#rotatex"
        }
      ]
    },
    "33707": {
      "name": "rotateY",
      "type": "Property",
      "url": "/api/class/EditableTextBase#rotatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the rotate affine transform of the view along the Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rotateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 415,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the rotate affine transform of the view along the Y axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#rotatey"
        }
      ]
    },
    "33708": {
      "name": "perspective",
      "type": "Property",
      "url": "/api/class/EditableTextBase#perspective",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "perspective: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 421,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the distance of the camera form the view perspective.\nUsually needed when rotating the view over the X or Y axis."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#perspective"
        }
      ]
    },
    "33709": {
      "name": "translateX",
      "type": "Property",
      "url": "/api/class/EditableTextBase#translatex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "translateX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 426,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateX affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#translatex"
        }
      ]
    },
    "33710": {
      "name": "translateY",
      "type": "Property",
      "url": "/api/class/EditableTextBase#translatey",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "translateY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 431,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the translateY affine transform of the view in device independent pixels."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#translatey"
        }
      ]
    },
    "33711": {
      "name": "scaleX",
      "type": "Property",
      "url": "/api/class/EditableTextBase#scalex",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleX affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "scaleX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 436,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleX affine transform of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#scalex"
        }
      ]
    },
    "33712": {
      "name": "scaleY",
      "type": "Property",
      "url": "/api/class/EditableTextBase#scaley",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the scaleY affine transform of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "scaleY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 441,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the scaleY affine transform of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#scaley"
        }
      ]
    },
    "33713": {
      "name": "originX",
      "type": "Property",
      "url": "/api/class/EditableTextBase#originx",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "originX: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 448,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the X component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#originx"
        }
      ]
    },
    "33714": {
      "name": "originY",
      "type": "Property",
      "url": "/api/class/EditableTextBase#originy",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "originY: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 453,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the Y component of the origin point around which the view will be transformed. The default value is 0.5 representing the center of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#originy"
        }
      ]
    },
    "33715": {
      "name": "isEnabled",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 458,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view is enabled. This affects the appearance of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#isenabled"
        }
      ]
    },
    "33716": {
      "name": "isUserInteractionEnabled",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isuserinteractionenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isUserInteractionEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 463,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the user can interact with the view. This does not affect the appearance of the view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#isuserinteractionenabled"
        }
      ]
    },
    "33717": {
      "name": "iosOverflowSafeArea",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iosoverflowsafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 468,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Instruct container view to expand beyond the safe area. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iosoverflowsafearea"
        }
      ]
    },
    "33718": {
      "name": "iosOverflowSafeAreaEnabled",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iosoverflowsafeareaenabled",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosOverflowSafeAreaEnabled: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 473,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Enables or disables the iosOverflowSafeArea property for all children. This property is iOS specific. Default value: true"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iosoverflowsafeareaenabled"
        }
      ]
    },
    "33719": {
      "name": "iosIgnoreSafeArea",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iosignoresafearea",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "iosIgnoreSafeArea: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 478,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets a value indicating whether the the view should totally ignore safe areas computation. This property is iOS specific. Default value: false"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iosignoresafearea"
        }
      ]
    },
    "33720": {
      "name": "isLayoutValid",
      "type": "Property",
      "url": "/api/class/EditableTextBase#islayoutvalid",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets is layout is valid. This is a read-only property."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 483,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets is layout is valid. This is a read-only property."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#islayoutvalid"
        }
      ]
    },
    "33721": {
      "name": "cssType",
      "type": "Property",
      "url": "/api/class/EditableTextBase#csstype",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "cssType: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 489,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the CSS fully qualified type name.\nUsing this as element type should allow for PascalCase and kebap-case selectors, when fully qualified, to match the element."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#csstype"
        }
      ]
    },
    "33722": {
      "name": "cssClasses",
      "type": "Property",
      "url": "/api/class/EditableTextBase#cssclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "cssClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 491,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#cssclasses"
        }
      ]
    },
    "33723": {
      "name": "cssPseudoClasses",
      "type": "Property",
      "url": "/api/class/EditableTextBase#csspseudoclasses",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "cssPseudoClasses: Set&lt;string&gt;",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 492,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#csspseudoclasses"
        }
      ]
    },
    "33724": {
      "name": "measure",
      "type": "Method",
      "url": "/api/class/EditableTextBase#measure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "measure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/EditableTextBase#measure-measure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 500,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This is called to find out how big a view should be. The parent supplies constraint information in the width and height parameters.\nThe actual measurement work of a view is performed in onMeasure(int, int), called by this method. Therefore, only onMeasure(int, int) can and must be overridden by subclasses."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Horizontal space requirements as imposed by the parent"
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Vertical space requirements as imposed by the parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33728": {
      "name": "layout",
      "type": "Method",
      "url": "/api/class/EditableTextBase#layout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layout(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number,\n  setFrame?: boolean\n): void",
          "url": "/api/class/EditableTextBase#layout-layout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 511,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Assign a size and position to a view and all of its descendants\nThis is the second phase of the layout mechanism. (The first is measuring). In this phase, each parent calls layout on all of its children to position them. This is typically done using the child measurements that were stored in the measure pass().\nDerived classes should not override this method. Derived classes with children should override onLayout. In that method, they should call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {}
            },
            {
              "name": "top",
              "type": "number",
              "flags": {}
            },
            {
              "name": "right",
              "type": "number",
              "flags": {}
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {}
            },
            {
              "name": "setFrame",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33735": {
      "name": "getMeasuredWidth",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getmeasuredwidth",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredWidth(): number",
          "url": "/api/class/EditableTextBase#getmeasuredwidth-getmeasuredwidth-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 516,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw width component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "33737": {
      "name": "getMeasuredHeight",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getmeasuredheight",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredHeight(): number",
          "url": "/api/class/EditableTextBase#getmeasuredheight-getmeasuredheight-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 521,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the raw height component."
              }
            ]
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "33739": {
      "name": "getMeasuredState",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getmeasuredstate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getMeasuredState(): number",
          "url": "/api/class/EditableTextBase#getmeasuredstate-getmeasuredstate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 523,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "33741": {
      "name": "onMeasure",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onmeasure",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onMeasure(widthMeasureSpec: number, heightMeasureSpec: number): void",
          "url": "/api/class/EditableTextBase#onmeasure-onmeasure-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 531,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Measure the view and its content to determine the measured width and the measured height. This method is invoked by measure(int, int) and should be overriden by subclasses to provide accurate and efficient measurement of their contents.\nWhen overriding this method, you must call setMeasuredDimension(int, int) to store the measured width and height of this view. Failure to do so will trigger an exception, thrown by measure(int, int)."
              }
            ]
          },
          "parameters": [
            {
              "name": "widthMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "horizontal space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            },
            {
              "name": "heightMeasureSpec",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "vertical space requirements as imposed by the parent. The requirements are encoded with View.MeasureSpec."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33745": {
      "name": "onLayout",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onlayout",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLayout(left: number, top: number, right: number, bottom: number): void",
          "url": "/api/class/EditableTextBase#onlayout-onlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 540,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33751": {
      "name": "setMeasuredDimension",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setmeasureddimension",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setMeasuredDimension(measuredWidth: number, measuredHeight: number): void",
          "url": "/api/class/EditableTextBase#setmeasureddimension-setmeasureddimension-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 547,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method must be called by onMeasure(int, int) to store the measured width and measured height. Failing to do so will trigger an exception at measurement time."
              }
            ]
          },
          "parameters": [
            {
              "name": "measuredWidth",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured width of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            },
            {
              "name": "measuredHeight",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The measured height of this view. May be a complex bit mask as defined by MEASURED_SIZE_MASK and MEASURED_STATE_TOO_SMALL."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33755": {
      "name": "layoutNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#layoutnativeview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "layoutNativeView(\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n): void",
          "url": "/api/class/EditableTextBase#layoutnativeview-layoutnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 556,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called from onLayout when native view position is about to be changed."
              }
            ]
          },
          "parameters": [
            {
              "name": "left",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Left position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "top",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Top position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "right",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Right position, relative to parent"
                  }
                ]
              }
            },
            {
              "name": "bottom",
              "type": "number",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Bottom position, relative to parent"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33761": {
      "name": "focus",
      "type": "Method",
      "url": "/api/class/EditableTextBase#focus",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "focus(): boolean",
          "url": "/api/class/EditableTextBase#focus-focus-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 593,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tries to focus the view.\nReturns a value indicating whether this view or one of its descendants actually took focus."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "33763": {
      "name": "getGestureObservers",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getgestureobservers",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getGestureObservers(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>): <a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]",
          "url": "/api/class/EditableTextBase#getgestureobservers-getgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 595,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/GesturesObserver\">GesturesObserver</a>[]"
        }
      ]
    },
    "33766": {
      "name": "off",
      "type": "Method",
      "url": "/api/class/EditableTextBase#off",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "off(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#off-off-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 603,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes listener(s) for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Comma delimited names of the events or gesture types the specified listener is associated with."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter pointing to a specific listener. If not defined, all listeners for the event names will be removed."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used to refine search of the correct callback which will be removed as event listener."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "33774": {
      "name": "on",
      "type": "Method",
      "url": "/api/class/EditableTextBase#on",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "on(eventNames: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 611,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A basic method signature to hook an event listener (shortcut alias to the addEventListener method)."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "String corresponding to events (e.g. \"propertyChange\"). Optionally could be used more events separated by "
                  },
                  {
                    "kind": "code",
                    "text": "`,`"
                  },
                  {
                    "kind": "text",
                    "text": " (e.g. \"propertyChange\", \"change\") or you can use gesture types."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback function which will be executed when event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which will be used as "
                  },
                  {
                    "kind": "code",
                    "text": "`this`"
                  },
                  {
                    "kind": "text",
                    "text": " context for callback execution."
                  }
                ]
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"loaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-2",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 616,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a loaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"loaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"unloaded\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-3",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 621,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when an unloaded event occurs."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"unloaded\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"androidBackPressed\", callback: (args: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-4",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 627,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised when a back button is pressed.\nThis event is raised only for android."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"androidBackPressed\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"showingModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#on-on-5",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 632,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised before the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"showingModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        },
        {
          "type": "CallSignature",
          "code": "on(event: \"shownModally\", callback: (args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void, thisArg?: any): any",
          "url": "/api/class/EditableTextBase#on-on-6",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 637,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Raised after the view is shown as a modal dialog."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "\"shownModally\"",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/ShownModallyData\">ShownModallyData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "any"
        }
      ]
    },
    "33817": {
      "name": "modal",
      "type": "Property",
      "url": "/api/class/EditableTextBase#modal",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns the current modal view that this page is showing (is parent of), if any."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "modal: <a href=\"/api/class/View\">View</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 642,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the current modal view that this page is showing (is parent of), if any."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#modal"
        }
      ]
    },
    "33818": {
      "name": "animate",
      "type": "Method",
      "url": "/api/class/EditableTextBase#animate",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "animate(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): AnimationPromise",
          "url": "/api/class/EditableTextBase#animate-animate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 647,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Animates one or more properties of the view based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "AnimationPromise"
        }
      ]
    },
    "33821": {
      "name": "createAnimation",
      "type": "Method",
      "url": "/api/class/EditableTextBase#createanimation",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createAnimation(options: <a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>): <a href=\"/api/class/Animation\">Animation</a>",
          "url": "/api/class/EditableTextBase#createanimation-createanimation-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 652,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates an Animation object based on the supplied options."
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/AnimationDefinition\">AnimationDefinition</a>",
              "flags": {}
            }
          ],
          "returns": "<a href=\"/api/class/Animation\">Animation</a>"
        }
      ]
    },
    "33824": {
      "name": "getSafeAreaInsets",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getsafeareainsets",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getSafeAreaInsets(): {\n  bottom: any\n  left: any\n  right: any\n}",
          "url": "/api/class/EditableTextBase#getsafeareainsets-getsafeareainsets-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 657,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the iOS safe area insets of this view."
              }
            ]
          },
          "parameters": [],
          "returns": "{\n  bottom: any\n  left: any\n  right: any\n}"
        }
      ]
    },
    "33831": {
      "name": "getLocationInWindow",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getlocationinwindow",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationInWindow(): Point",
          "url": "/api/class/EditableTextBase#getlocationinwindow-getlocationinwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 662,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the window coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "33833": {
      "name": "getLocationOnScreen",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getlocationonscreen",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationOnScreen(): Point",
          "url": "/api/class/EditableTextBase#getlocationonscreen-getlocationonscreen-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 667,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the screen coordinate system."
              }
            ]
          },
          "parameters": [],
          "returns": "Point"
        }
      ]
    },
    "33835": {
      "name": "getLocationRelativeTo",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getlocationrelativeto",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getLocationRelativeTo(otherView: <a href=\"/api/class/View\">View</a>): Point",
          "url": "/api/class/EditableTextBase#getlocationrelativeto-getlocationrelativeto-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 672,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the location of this view in the otherView's coordinate system."
              }
            ]
          },
          "parameters": [
            {
              "name": "otherView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "Point"
        }
      ]
    },
    "33838": {
      "name": "getActualSize",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getactualsize",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getActualSize(): <a href=\"/api/interface/Size\">Size</a>",
          "url": "/api/class/EditableTextBase#getactualsize-getactualsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 677,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the actual size of the view in device-independent pixels."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/interface/Size\">Size</a>"
        }
      ]
    },
    "33840": {
      "name": "onBackPressed",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onbackpressed",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onBackPressed(): boolean",
          "url": "/api/class/EditableTextBase#onbackpressed-onbackpressed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 682,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Derived classes can override this method to handle Android back button press."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "33852": {
      "name": "_getNativeViewsCount",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getnativeviewscount",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getNativeViewsCount(): number",
          "url": "/api/class/EditableTextBase#getnativeviewscount-getnativeviewscount-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 712,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "number"
        }
      ]
    },
    "33854": {
      "name": "_closeAllModalViewsInternal",
      "type": "Method",
      "url": "/api/class/EditableTextBase#closeallmodalviewsinternal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_closeAllModalViewsInternal(): boolean",
          "url": "/api/class/EditableTextBase#closeallmodalviewsinternal-closeallmodalviewsinternal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 718,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nCloses all modal views. Should be used by plugins like "
              },
              {
                "kind": "code",
                "text": "`nativescript-angular`"
              },
              {
                "kind": "text",
                "text": " which implement their own "
              },
              {
                "kind": "code",
                "text": "`modal views`"
              },
              {
                "kind": "text",
                "text": " service."
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "33856": {
      "name": "_getRootModalViews",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getrootmodalviews",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getRootModalViews(): <a href=\"/api/class/ViewBase\">ViewBase</a>[]",
          "url": "/api/class/EditableTextBase#getrootmodalviews-getrootmodalviews-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 724,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal method:\nGets all modal views of the current view."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ViewBase\">ViewBase</a>[]"
        }
      ]
    },
    "33858": {
      "name": "_eachLayoutView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#eachlayoutview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_eachLayoutView(callback: (View: any) => void): void",
          "url": "/api/class/EditableTextBase#eachlayoutview-eachlayoutview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 726,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(View: any) => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33864": {
      "name": "_onSizeChanged",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onsizechanged",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onSizeChanged(): void",
          "url": "/api/class/EditableTextBase#onsizechanged-onsizechanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 731,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "iOS Only Internal method used to update various view details like background rerendering, border, etc."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33866": {
      "name": "hasGestureObservers",
      "type": "Method",
      "url": "/api/class/EditableTextBase#hasgestureobservers",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasGestureObservers(): boolean",
          "url": "/api/class/EditableTextBase#hasgestureobservers-hasgestureobservers-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 736,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only check if gesture observers are attached"
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "33868": {
      "name": "setOnTouchListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setontouchlistener",
      "flags": {
        "isOptional": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setOnTouchListener(): void",
          "url": "/api/class/EditableTextBase#setontouchlistener-setontouchlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 741,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Android only to set the touch listener"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33870": {
      "name": "eachChildView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#eachchildview",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChildView(callback: (view: <a href=\"/api/class/View\">View</a>) => boolean): void",
          "url": "/api/class/EditableTextBase#eachchildview-eachchildview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 747,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Iterates over children of type View."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(view: <a href=\"/api/class/View\">View</a>) => boolean",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called for each child of type View. Iteration stops if this method returns falsy value."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33876": {
      "name": "sendAccessibilityEvent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#sendaccessibilityevent",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "sendAccessibilityEvent(options: Partial&lt;AccessibilityEventOptions&gt;): void",
          "url": "/api/class/EditableTextBase#sendaccessibilityevent-sendaccessibilityevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 761,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Send accessibility event"
              }
            ],
            "blockTags": [
              {
                "tag": "@params",
                "content": [
                  {
                    "kind": "text",
                    "text": "options AccessibilityEventOptions\nandroidAccessibilityEvent: AndroidAccessibilityEvent;\niosNotificationType: IOSPostAccessibilityNotificationType;\nmessage: string;\n\niOS Notes:\n type = 'announcement' will announce "
                  },
                  {
                    "kind": "code",
                    "text": "`args`"
                  },
                  {
                    "kind": "text",
                    "text": " via VoiceOver. If no args element will be announced instead.\n type = 'layout' used when the layout of a screen changes.\n type = 'screen' large change made to the screen."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "options",
              "type": "Partial&lt;AccessibilityEventOptions&gt;",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33879": {
      "name": "accessibilityAnnouncement",
      "type": "Method",
      "url": "/api/class/EditableTextBase#accessibilityannouncement",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityAnnouncement(msg?: string): void",
          "url": "/api/class/EditableTextBase#accessibilityannouncement-accessibilityannouncement-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 766,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Make an announcement to the screen reader."
              }
            ]
          },
          "parameters": [
            {
              "name": "msg",
              "type": "string",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33882": {
      "name": "accessibilityScreenChanged",
      "type": "Method",
      "url": "/api/class/EditableTextBase#accessibilityscreenchanged",
      "flags": {
        "isPublic": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "accessibilityScreenChanged(): void",
          "url": "/api/class/EditableTextBase#accessibilityscreenchanged-accessibilityscreenchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 771,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Announce screen changed"
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33951": {
      "name": "_handleLivesync",
      "type": "Method",
      "url": "/api/class/EditableTextBase#handlelivesync",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_handleLivesync(context?: { path: string }): boolean",
          "url": "/api/class/EditableTextBase#handlelivesync-handlelivesync-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 866,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "{\n  path: string\n}",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "33957": {
      "name": "_updateStyleScope",
      "type": "Method",
      "url": "/api/class/EditableTextBase#updatestylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_updateStyleScope(\n  cssFileName?: string,\n  cssString?: string,\n  css?: string\n): void",
          "url": "/api/class/EditableTextBase#updatestylescope-updatestylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 874,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates styleScope or create new styleScope."
              }
            ]
          },
          "parameters": [
            {
              "name": "cssFileName",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "cssString",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            },
            {
              "name": "css",
              "type": "string",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": []
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33962": {
      "name": "_onAttachedToWindow",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onattachedtowindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onAttachedToWindow(): void",
          "url": "/api/class/EditableTextBase#onattachedtowindow-onattachedtowindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 879,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is attached to window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33964": {
      "name": "_onDetachedFromWindow",
      "type": "Method",
      "url": "/api/class/EditableTextBase#ondetachedfromwindow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onDetachedFromWindow(): void",
          "url": "/api/class/EditableTextBase#ondetachedfromwindow-ondetachedfromwindow-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 884,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Called in android when native view is dettached from window."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33966": {
      "name": "_hasAncestorView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#hasancestorview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hasAncestorView(ancestorView: <a href=\"/api/class/View\">View</a>): boolean",
          "url": "/api/class/EditableTextBase#hasancestorview-hasancestorview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 889,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether the current view has specific view for an ancestor."
              }
            ]
          },
          "parameters": [
            {
              "name": "ancestorView",
              "type": "<a href=\"/api/class/View\">View</a>",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "33969": {
      "name": "_getValue",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_getValue(property: any): never",
          "url": "/api/class/EditableTextBase#getvalue-getvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 895,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _getValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "33972": {
      "name": "_setValue",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setvalue",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setValue(property: any, value: any): never",
          "url": "/api/class/EditableTextBase#setvalue-setvalue-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/index.d.ts",
              "line": 900,
              "character": 1
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "__Obsolete:__ There is a new property system that does not rely on _setValue."
              }
            ]
          },
          "parameters": [
            {
              "name": "property",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "never"
        }
      ]
    },
    "33976": {
      "name": "testID",
      "type": "Property",
      "url": "/api/class/EditableTextBase#testid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "testID: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 29,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#testid"
        }
      ]
    },
    "33977": {
      "name": "touchAnimation",
      "type": "Property",
      "url": "/api/class/EditableTextBase#touchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "touchAnimation: boolean | <a href=\"/api/index#touchanimationoptions\">TouchAnimationOptions</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 30,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#touchanimation"
        }
      ]
    },
    "33978": {
      "name": "ignoreTouchAnimation",
      "type": "Property",
      "url": "/api/class/EditableTextBase#ignoretouchanimation",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "ignoreTouchAnimation: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 31,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#ignoretouchanimation"
        }
      ]
    },
    "33979": {
      "name": "touchDelay",
      "type": "Property",
      "url": "/api/class/EditableTextBase#touchdelay",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "touchDelay: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 32,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#touchdelay"
        }
      ]
    },
    "33980": {
      "name": "_closeModalCallback",
      "type": "Property",
      "url": "/api/class/EditableTextBase#closemodalcallback",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_closeModalCallback: Function",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 33,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#closemodalcallback"
        }
      ]
    },
    "33981": {
      "name": "transitionId",
      "type": "Property",
      "url": "/api/class/EditableTextBase#transitionid",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Active transition instance id for tracking state"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "transitionId: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 41,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Active transition instance id for tracking state"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#transitionid"
        }
      ]
    },
    "33982": {
      "name": "_isLayoutValid",
      "type": "Property",
      "url": "/api/class/EditableTextBase#islayoutvalid",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isLayoutValid: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 44,
              "character": 14
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#islayoutvalid"
        }
      ]
    },
    "33983": {
      "name": "onLoaded",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onLoaded(): void",
          "url": "/api/class/EditableTextBase#onloaded-onloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 60,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "33985": {
      "name": "_setupAsRootView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setupasrootview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupAsRootView(context: any): void",
          "url": "/api/class/EditableTextBase#setupasrootview-setupasrootview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 65,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33988": {
      "name": "_observe",
      "type": "Method",
      "url": "/api/class/EditableTextBase#observe",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_observe(type: <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#observe-observe-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 66,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "<a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(args: <a href=\"/api/interface/GestureEventData\">GestureEventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "33996": {
      "name": "addEventListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#addeventlistener-addeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 68,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {}
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34004": {
      "name": "removeEventListener",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeeventlistener",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "removeEventListener(arg: string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>, callback?: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#removeeventlistener-removeeventlistener-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 69,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "arg",
              "type": "string | <a href=\"/api/enum/GestureTypes\">GestureTypes</a>",
              "flags": {}
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34012": {
      "name": "showModal",
      "type": "Method",
      "url": "/api/class/EditableTextBase#showmodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "showModal(...args: any[]): <a href=\"/api/class/View\">View</a>",
          "url": "/api/class/EditableTextBase#showmodal-showmodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 73,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "<a href=\"/api/class/View\">View</a>"
        }
      ]
    },
    "34015": {
      "name": "closeModal",
      "type": "Method",
      "url": "/api/class/EditableTextBase#closemodal",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "closeModal(...args: any[]): void",
          "url": "/api/class/EditableTextBase#closemodal-closemodal-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 74,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "args",
              "type": "any[]",
              "flags": {
                "isRest": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34018": {
      "name": "_showNativeModalView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#shownativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_showNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, options: <a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>): void",
          "url": "/api/class/EditableTextBase#shownativemodalview-shownativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 76,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "options",
              "type": "<a href=\"/api/interface/ShowModalOptions\">ShowModalOptions</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34022": {
      "name": "_hideNativeModalView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#hidenativemodalview",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_hideNativeModalView(parent: <a href=\"/api/class/ViewCommon\">ViewCommon</a>, whenClosedCallback: () => void): void",
          "url": "/api/class/EditableTextBase#hidenativemodalview-hidenativemodalview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 77,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "parent",
              "type": "<a href=\"/api/class/ViewCommon\">ViewCommon</a>",
              "flags": {}
            },
            {
              "name": "whenClosedCallback",
              "type": "() => void",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34028": {
      "name": "_raiseLayoutChangedEvent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#raiselayoutchangedevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseLayoutChangedEvent(): void",
          "url": "/api/class/EditableTextBase#raiselayoutchangedevent-raiselayoutchangedevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 78,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34030": {
      "name": "_raiseShownModallyEvent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#raiseshownmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShownModallyEvent(): void",
          "url": "/api/class/EditableTextBase#raiseshownmodallyevent-raiseshownmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 79,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34032": {
      "name": "_raiseShowingModallyEvent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#raiseshowingmodallyevent",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_raiseShowingModallyEvent(): void",
          "url": "/api/class/EditableTextBase#raiseshowingmodallyevent-raiseshowingmodallyevent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 80,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34034": {
      "name": "backgroundSize",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#backgroundsize",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundSize(): string",
          "url": "/api/class/EditableTextBase#backgroundsize-backgroundsize-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 121,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "34038": {
      "name": "backgroundPosition",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#backgroundposition",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundPosition(): string",
          "url": "/api/class/EditableTextBase#backgroundposition-backgroundposition-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 123,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "34042": {
      "name": "backgroundRepeat",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#backgroundrepeat",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get backgroundRepeat(): <a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>",
          "url": "/api/class/EditableTextBase#backgroundrepeat-backgroundrepeat-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 125,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "<a href=\"/api/namespace/CoreTypes#backgroundrepeattype\">BackgroundRepeatType</a>"
        }
      ]
    },
    "34046": {
      "name": "requestLayout",
      "type": "Method",
      "url": "/api/class/EditableTextBase#requestlayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "requestLayout(): void",
          "url": "/api/class/EditableTextBase#requestlayout-requestlayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 216,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34048": {
      "name": "eachChild",
      "type": "Method",
      "url": "/api/class/EditableTextBase#eachchild",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "eachChild(callback: (child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean): void",
          "url": "/api/class/EditableTextBase#eachchild-eachchild-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 241,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "callback",
              "type": "(child: <a href=\"/api/class/ViewBase\">ViewBase</a>) => boolean",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34054": {
      "name": "resetNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#resetnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "resetNativeView(): void",
          "url": "/api/class/EditableTextBase#resetnativeview-resetnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 259,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34056": {
      "name": "setTestID",
      "type": "Method",
      "url": "/api/class/EditableTextBase#settestid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setTestID(view: any, value: string): void",
          "url": "/api/class/EditableTextBase#settestid-settestid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view/view-common.d.ts",
              "line": 273,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "any",
              "flags": {}
            },
            {
              "name": "value",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34060": {
      "name": "domNode",
      "type": "Property",
      "url": "/api/class/EditableTextBase#domnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "domNode: DOMNode",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 149,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#domnode"
        }
      ]
    },
    "34061": {
      "name": "recycleNativeView",
      "type": "Property",
      "url": "/api/class/EditableTextBase#recyclenativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "recycleNativeView: \"auto\" | \"always\" | \"never\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 150,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#recyclenativeview"
        }
      ]
    },
    "34062": {
      "name": "viewController",
      "type": "Property",
      "url": "/api/class/EditableTextBase#viewcontroller",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "returns the native UIViewController."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "viewController: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 154,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "returns the native UIViewController."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#viewcontroller"
        }
      ]
    },
    "34063": {
      "name": "nativeViewProtected",
      "type": "Property",
      "url": "/api/class/EditableTextBase#nativeviewprotected",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "nativeViewProtected: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 159,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "read-only. If you want to set out-of-band the nativeView use the setNativeView method."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#nativeviewprotected"
        }
      ]
    },
    "34064": {
      "name": "parent",
      "type": "Property",
      "url": "/api/class/EditableTextBase#parent",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets the parent view. This property is read-only."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "parent: <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 163,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the parent view. This property is read-only."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#parent"
        }
      ]
    },
    "34065": {
      "name": "isCollapsed",
      "type": "Property",
      "url": "/api/class/EditableTextBase#iscollapsed",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Returns true if visibility is set to 'collapse'.\nDefault(false) set in prototype\nReadonly property"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "isCollapsed: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 169,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns true if visibility is set to 'collapse'.\nDefault(false) set in prototype\nReadonly property"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#iscollapsed"
        }
      ]
    },
    "34066": {
      "name": "id",
      "type": "Property",
      "url": "/api/class/EditableTextBase#id",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the id for this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "id: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 173,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the id for this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#id"
        }
      ]
    },
    "34067": {
      "name": "className",
      "type": "Property",
      "url": "/api/class/EditableTextBase#classname",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the CSS class name for this view."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "className: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 177,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the CSS class name for this view."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#classname"
        }
      ]
    },
    "34068": {
      "name": "sharedTransitionTag",
      "type": "Property",
      "url": "/api/class/EditableTextBase#sharedtransitiontag",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets the shared transition tag for animated view transitions"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "sharedTransitionTag: string",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 181,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets the shared transition tag for animated view transitions"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#sharedtransitiontag"
        }
      ]
    },
    "34069": {
      "name": "sharedTransitionIgnore",
      "type": "Property",
      "url": "/api/class/EditableTextBase#sharedtransitionignore",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Opt out of shared transition under different binding conditions"
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "sharedTransitionIgnore: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 185,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Opt out of shared transition under different binding conditions"
              }
            ]
          },
          "url": "/api/class/EditableTextBase#sharedtransitionignore"
        }
      ]
    },
    "34070": {
      "name": "_domId",
      "type": "Property",
      "url": "/api/class/EditableTextBase#domid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_domId: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 186,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#domid"
        }
      ]
    },
    "34071": {
      "name": "_context",
      "type": "Property",
      "url": "/api/class/EditableTextBase#context",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_context: any",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 187,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#context"
        }
      ]
    },
    "34072": {
      "name": "_isAddedToNativeVisualTree",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isaddedtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isAddedToNativeVisualTree: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 188,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#isaddedtonativevisualtree"
        }
      ]
    },
    "34073": {
      "name": "_cssState",
      "type": "Property",
      "url": "/api/class/EditableTextBase#cssstate",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_cssState: CssState",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 189,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#cssstate"
        }
      ]
    },
    "34074": {
      "name": "_styleScope",
      "type": "Property",
      "url": "/api/class/EditableTextBase#stylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_styleScope: StyleScope",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 190,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#stylescope"
        }
      ]
    },
    "34079": {
      "name": "_suspendNativeUpdatesCount",
      "type": "Property",
      "url": "/api/class/EditableTextBase#suspendnativeupdatescount",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_suspendNativeUpdatesCount: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 208,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the depth of suspended updates.\nWhen the value is 0 the current property updates are not batched nor scoped and must be immediately applied.\nIf the value is 1 or greater, the current updates are batched and does not have to provide immediate update.\nDo not set this field, the _batchUpdate method is responsible to keep the count up to date,\nas well as adding/rmoving the view to/from the visual tree."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#suspendnativeupdatescount"
        }
      ]
    },
    "34080": {
      "name": "_isStyleScopeHost",
      "type": "Property",
      "url": "/api/class/EditableTextBase#isstylescopehost",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isStyleScopeHost: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 209,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#isstylescopehost"
        }
      ]
    },
    "34081": {
      "name": "_automaticallyAdjustsScrollViewInsets",
      "type": "Property",
      "url": "/api/class/EditableTextBase#automaticallyadjustsscrollviewinsets",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_automaticallyAdjustsScrollViewInsets: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 210,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#automaticallyadjustsscrollviewinsets"
        }
      ]
    },
    "34082": {
      "name": "left",
      "type": "Property",
      "url": "/api/class/EditableTextBase#left",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "left: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 211,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#left"
        }
      ]
    },
    "34083": {
      "name": "top",
      "type": "Property",
      "url": "/api/class/EditableTextBase#top",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "top: <a href=\"/api/namespace/CoreTypes#lengthtype\">LengthType</a>",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 212,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#top"
        }
      ]
    },
    "34084": {
      "name": "effectiveLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 213,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveleft"
        }
      ]
    },
    "34085": {
      "name": "effectiveTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivetop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 214,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivetop"
        }
      ]
    },
    "34086": {
      "name": "dock",
      "type": "Property",
      "url": "/api/class/EditableTextBase#dock",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "dock: \"left\" | \"right\" | \"top\" | \"bottom\"",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 215,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#dock"
        }
      ]
    },
    "34087": {
      "name": "row",
      "type": "Property",
      "url": "/api/class/EditableTextBase#row",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "row: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 216,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#row"
        }
      ]
    },
    "34088": {
      "name": "col",
      "type": "Property",
      "url": "/api/class/EditableTextBase#col",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "col: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 217,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#col"
        }
      ]
    },
    "34089": {
      "name": "column",
      "type": "Property",
      "url": "/api/class/EditableTextBase#column",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "column: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 218,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#column"
        }
      ]
    },
    "34090": {
      "name": "rowSpan",
      "type": "Property",
      "url": "/api/class/EditableTextBase#rowspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "rowSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 219,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#rowspan"
        }
      ]
    },
    "34091": {
      "name": "colSpan",
      "type": "Property",
      "url": "/api/class/EditableTextBase#colspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "colSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 220,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#colspan"
        }
      ]
    },
    "34092": {
      "name": "columnSpan",
      "type": "Property",
      "url": "/api/class/EditableTextBase#columnspan",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "columnSpan: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 221,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#columnspan"
        }
      ]
    },
    "34093": {
      "name": "order",
      "type": "Property",
      "url": "/api/class/EditableTextBase#order",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "order: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 222,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#order"
        }
      ]
    },
    "34094": {
      "name": "flexGrow",
      "type": "Property",
      "url": "/api/class/EditableTextBase#flexgrow",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "flexGrow: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 223,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#flexgrow"
        }
      ]
    },
    "34095": {
      "name": "flexShrink",
      "type": "Property",
      "url": "/api/class/EditableTextBase#flexshrink",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "flexShrink: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 224,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#flexshrink"
        }
      ]
    },
    "34096": {
      "name": "flexWrapBefore",
      "type": "Property",
      "url": "/api/class/EditableTextBase#flexwrapbefore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "flexWrapBefore: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 225,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#flexwrapbefore"
        }
      ]
    },
    "34097": {
      "name": "alignSelf",
      "type": "Property",
      "url": "/api/class/EditableTextBase#alignself",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "alignSelf: AlignSelf",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 226,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#alignself"
        }
      ]
    },
    "34098": {
      "name": "_oldLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#oldleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 227,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#oldleft"
        }
      ]
    },
    "34099": {
      "name": "_oldTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#oldtop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 228,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#oldtop"
        }
      ]
    },
    "34100": {
      "name": "_oldRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#oldright",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 229,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#oldright"
        }
      ]
    },
    "34101": {
      "name": "_oldBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#oldbottom",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_oldBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 230,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#oldbottom"
        }
      ]
    },
    "34102": {
      "name": "_ignoreFlexMinWidthHeightReset",
      "type": "Property",
      "url": "/api/class/EditableTextBase#ignoreflexminwidthheightreset",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_ignoreFlexMinWidthHeightReset: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 231,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#ignoreflexminwidthheightreset"
        }
      ]
    },
    "34103": {
      "name": "effectiveMinWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveminwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMinWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 232,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveminwidth"
        }
      ]
    },
    "34104": {
      "name": "effectiveMinHeight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveminheight",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMinHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 233,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveminheight"
        }
      ]
    },
    "34105": {
      "name": "effectiveWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivewidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 234,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivewidth"
        }
      ]
    },
    "34106": {
      "name": "effectiveHeight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveheight",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveHeight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 235,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveheight"
        }
      ]
    },
    "34107": {
      "name": "effectiveMarginTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivemargintop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 236,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivemargintop"
        }
      ]
    },
    "34108": {
      "name": "effectiveMarginRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivemarginright",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 237,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivemarginright"
        }
      ]
    },
    "34109": {
      "name": "effectiveMarginBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivemarginbottom",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 238,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivemarginbottom"
        }
      ]
    },
    "34110": {
      "name": "effectiveMarginLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivemarginleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveMarginLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 239,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivemarginleft"
        }
      ]
    },
    "34111": {
      "name": "effectivePaddingTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivepaddingtop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 240,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivepaddingtop"
        }
      ]
    },
    "34112": {
      "name": "effectivePaddingRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivepaddingright",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 241,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivepaddingright"
        }
      ]
    },
    "34113": {
      "name": "effectivePaddingBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivepaddingbottom",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 242,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivepaddingbottom"
        }
      ]
    },
    "34114": {
      "name": "effectivePaddingLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivepaddingleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectivePaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 243,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivepaddingleft"
        }
      ]
    },
    "34115": {
      "name": "effectiveBorderTopWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectivebordertopwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderTopWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 244,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectivebordertopwidth"
        }
      ]
    },
    "34116": {
      "name": "effectiveBorderRightWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveborderrightwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderRightWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 245,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveborderrightwidth"
        }
      ]
    },
    "34117": {
      "name": "effectiveBorderBottomWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveborderbottomwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderBottomWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 246,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveborderbottomwidth"
        }
      ]
    },
    "34118": {
      "name": "effectiveBorderLeftWidth",
      "type": "Property",
      "url": "/api/class/EditableTextBase#effectiveborderleftwidth",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "effectiveBorderLeftWidth: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 247,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#effectiveborderleftwidth"
        }
      ]
    },
    "34119": {
      "name": "_defaultPaddingTop",
      "type": "Property",
      "url": "/api/class/EditableTextBase#defaultpaddingtop",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingTop: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 248,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#defaultpaddingtop"
        }
      ]
    },
    "34120": {
      "name": "_defaultPaddingRight",
      "type": "Property",
      "url": "/api/class/EditableTextBase#defaultpaddingright",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingRight: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 249,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#defaultpaddingright"
        }
      ]
    },
    "34121": {
      "name": "_defaultPaddingBottom",
      "type": "Property",
      "url": "/api/class/EditableTextBase#defaultpaddingbottom",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingBottom: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 250,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#defaultpaddingbottom"
        }
      ]
    },
    "34122": {
      "name": "_defaultPaddingLeft",
      "type": "Property",
      "url": "/api/class/EditableTextBase#defaultpaddingleft",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_defaultPaddingLeft: number",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 251,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#defaultpaddingleft"
        }
      ]
    },
    "34123": {
      "name": "_isPaddingRelative",
      "type": "Property",
      "url": "/api/class/EditableTextBase#ispaddingrelative",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "_isPaddingRelative: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 252,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "url": "/api/class/EditableTextBase#ispaddingrelative"
        }
      ]
    },
    "34125": {
      "name": "reusable",
      "type": "Property",
      "url": "/api/class/EditableTextBase#reusable",
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
          }
        ]
      },
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "code": "reusable: boolean",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 262,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets or sets if the view is reusable.\nReusable views are not automatically destroyed when removed from the View tree."
              }
            ]
          },
          "url": "/api/class/EditableTextBase#reusable"
        }
      ]
    },
    "34126": {
      "name": "parentNode",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#parentnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get parentNode(): <a href=\"/api/class/ViewBase\">ViewBase</a>",
          "url": "/api/class/EditableTextBase#parentnode-parentnode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 267,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the template parent or the native parent. Sets the template parent."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/ViewBase\">ViewBase</a>"
        }
      ]
    },
    "34130": {
      "name": "nativeView",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#nativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get nativeView(): any",
          "url": "/api/class/EditableTextBase#nativeview-nativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 269,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "any"
        }
      ]
    },
    "34134": {
      "name": "typeName",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#typename",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get typeName(): string",
          "url": "/api/class/EditableTextBase#typename-typename-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 274,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the name of the constructor function for this instance. E.g. for a Button class this will return \"Button\"."
              }
            ]
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "34136": {
      "name": "style",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#style",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get style(): <a href=\"/api/class/Style\">Style</a>",
          "url": "/api/class/EditableTextBase#style-style-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 278,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the style object associated to this view."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/Style\">Style</a>"
        }
      ]
    },
    "34140": {
      "name": "isLoaded",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#isloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get isLoaded(): boolean",
          "url": "/api/class/EditableTextBase#isloaded-isloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 282,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "34142": {
      "name": "class",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#class",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get class(): string",
          "url": "/api/class/EditableTextBase#class-class-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 283,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "34146": {
      "name": "getViewById",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getviewbyid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewById&lt;T&gt;(id: string): T",
          "url": "/api/class/EditableTextBase#getviewbyid-getviewbyid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 288,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified id."
              }
            ]
          },
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "34150": {
      "name": "getViewByDomId",
      "type": "Method",
      "url": "/api/class/EditableTextBase#getviewbydomid",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "getViewByDomId&lt;T&gt;(domId: number): T",
          "url": "/api/class/EditableTextBase#getviewbydomid-getviewbydomid-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 292,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Returns the child view with the specified domId."
              }
            ]
          },
          "parameters": [
            {
              "name": "domId",
              "type": "number",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "34154": {
      "name": "page",
      "type": "Accessor",
      "url": "/api/class/EditableTextBase#page",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "GetSignature",
          "code": "get page(): <a href=\"/api/class/Page\">Page</a>",
          "url": "/api/class/EditableTextBase#page-page-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 296,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets owner page. This is a read-only property."
              }
            ]
          },
          "parameters": [],
          "returns": "<a href=\"/api/class/Page\">Page</a>"
        }
      ]
    },
    "34156": {
      "name": "ensureDomNode",
      "type": "Method",
      "url": "/api/class/EditableTextBase#ensuredomnode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "ensureDomNode(): void",
          "url": "/api/class/EditableTextBase#ensuredomnode-ensuredomnode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 301,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "Ensures a dom-node for this view."
                  }
                ]
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34158": {
      "name": "set",
      "type": "Method",
      "url": "/api/class/EditableTextBase#set",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "set(name: string, value: any): void",
          "url": "/api/class/EditableTextBase#set-set-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 302,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34162": {
      "name": "onUnloaded",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onunloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onUnloaded(): void",
          "url": "/api/class/EditableTextBase#onunloaded-onunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 304,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34164": {
      "name": "_layoutParent",
      "type": "Method",
      "url": "/api/class/EditableTextBase#layoutparent",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_layoutParent(): void",
          "url": "/api/class/EditableTextBase#layoutparent-layoutparent-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 305,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34166": {
      "name": "_suspendNativeUpdates",
      "type": "Method",
      "url": "/api/class/EditableTextBase#suspendnativeupdates",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_suspendNativeUpdates(type: SuspendType): void",
          "url": "/api/class/EditableTextBase#suspendnativeupdates-suspendnativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 306,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "SuspendType",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34169": {
      "name": "_resumeNativeUpdates",
      "type": "Method",
      "url": "/api/class/EditableTextBase#resumenativeupdates",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_resumeNativeUpdates(type: SuspendType): void",
          "url": "/api/class/EditableTextBase#resumenativeupdates-resumenativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 307,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "type",
              "type": "SuspendType",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34172": {
      "name": "_batchUpdate",
      "type": "Method",
      "url": "/api/class/EditableTextBase#batchupdate",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_batchUpdate&lt;T&gt;(callback: () => T): T",
          "url": "/api/class/EditableTextBase#batchupdate-batchupdate-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 311,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow multiple updates to be performed on the instance at once."
              }
            ]
          },
          "parameters": [
            {
              "name": "callback",
              "type": "() => T",
              "flags": {}
            }
          ],
          "returns": "T"
        }
      ]
    },
    "34178": {
      "name": "callLoaded",
      "type": "Method",
      "url": "/api/class/EditableTextBase#callloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callLoaded(): void",
          "url": "/api/class/EditableTextBase#callloaded-callloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 315,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34180": {
      "name": "callUnloaded",
      "type": "Method",
      "url": "/api/class/EditableTextBase#callunloaded",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "callUnloaded(): void",
          "url": "/api/class/EditableTextBase#callunloaded-callunloaded-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 316,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34182": {
      "name": "addPseudoClass",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addpseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "addPseudoClass(name: string): void",
          "url": "/api/class/EditableTextBase#addpseudoclass-addpseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 327,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to add a matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34185": {
      "name": "deletePseudoClass",
      "type": "Method",
      "url": "/api/class/EditableTextBase#deletepseudoclass",
      "flags": {
        "isProtected": true
      },
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "deletePseudoClass(name: string): void",
          "url": "/api/class/EditableTextBase#deletepseudoclass-deletepseudoclass-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 333,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@unstable",
                "content": [
                  {
                    "kind": "text",
                    "text": "A widget can call this method to discard matching css pseudo class."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34188": {
      "name": "bind",
      "type": "Method",
      "url": "/api/class/EditableTextBase#bind",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "bind(options: <a href=\"/api/interface/BindingOptions\">BindingOptions</a>, source?: Object): void",
          "url": "/api/class/EditableTextBase#bind-bind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 338,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "options",
              "type": "<a href=\"/api/interface/BindingOptions\">BindingOptions</a>",
              "flags": {}
            },
            {
              "name": "source",
              "type": "Object",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34192": {
      "name": "unbind",
      "type": "Method",
      "url": "/api/class/EditableTextBase#unbind",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unbind(property: string): void",
          "url": "/api/class/EditableTextBase#unbind-unbind-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 339,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "property",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34195": {
      "name": "_addView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/EditableTextBase#addview-addview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 350,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34199": {
      "name": "_addViewCore",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addviewcore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): void",
          "url": "/api/class/EditableTextBase#addviewcore-addviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 354,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34203": {
      "name": "loadView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#loadview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "loadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#loadview-loadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 359,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Load view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to load."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34206": {
      "name": "_shouldDelayLayout",
      "type": "Method",
      "url": "/api/class/EditableTextBase#shoulddelaylayout",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_shouldDelayLayout(): boolean",
          "url": "/api/class/EditableTextBase#shoulddelaylayout-shoulddelaylayout-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 364,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "When returning true the callLoaded method will be run in setTimeout\nMethod is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "boolean"
        }
      ]
    },
    "34208": {
      "name": "unloadView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#unloadview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "unloadView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#unloadview-unloadview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 369,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Unload view."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "to unload."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34211": {
      "name": "_removeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeView(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#removeview-removeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 373,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Core logic for removing a child view from this instance. Used by the framework to handle lifecycle events more centralized. Do not use outside the UI Stack implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34214": {
      "name": "_removeViewCore",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeviewcore",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewCore(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#removeviewcore-removeviewcore-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 377,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34217": {
      "name": "createNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#createnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "createNativeView(): Object",
          "url": "/api/class/EditableTextBase#createnativeview-createnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 382,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Creates a native view.\nReturns either android.view.View or UIView."
              }
            ]
          },
          "parameters": [],
          "returns": "Object"
        }
      ]
    },
    "34219": {
      "name": "disposeNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#disposenativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "disposeNativeView(): void",
          "url": "/api/class/EditableTextBase#disposenativeview-disposenativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 386,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Clean up references to the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34221": {
      "name": "initNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#initnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "initNativeView(): void",
          "url": "/api/class/EditableTextBase#initnativeview-initnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 390,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Initializes properties/listeners of the native view."
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34223": {
      "name": "_setupUI",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setupui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_setupUI(context: any, atIndex?: number, parentIsLoaded?: boolean): void",
          "url": "/api/class/EditableTextBase#setupui-setupui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 401,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Setups the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "context",
              "type": "any",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            },
            {
              "name": "parentIsLoaded",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34228": {
      "name": "setNativeView",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setnativeview",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setNativeView(value: any): void",
          "url": "/api/class/EditableTextBase#setnativeview-setnativeview-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 407,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the nativeView field performing extra checks and updates to the native properties on the new view.\nUse in cases where the createNativeView is not suitable.\nAs an example use in item controls where the native parent view will create the native views for child items."
              }
            ]
          },
          "parameters": [
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34231": {
      "name": "destroyNode",
      "type": "Method",
      "url": "/api/class/EditableTextBase#destroynode",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "destroyNode(forceDestroyChildren?: boolean): void",
          "url": "/api/class/EditableTextBase#destroynode-destroynode-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 413,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI of a reusable node by making it no longer reusable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "_tearDownUI"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "forceDestroyChildren",
              "type": "boolean",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Force destroy the children (even if they are reusable)"
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34234": {
      "name": "_tearDownUI",
      "type": "Method",
      "url": "/api/class/EditableTextBase#teardownui",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_tearDownUI(force?: boolean): void",
          "url": "/api/class/EditableTextBase#teardownui-teardownui-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 418,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tears down the UI for ViewBase and all its children recursively.\nThis method should *not* be overridden by derived views."
              }
            ]
          },
          "parameters": [
            {
              "name": "force",
              "type": "boolean",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34237": {
      "name": "_childIndexToNativeChildIndex",
      "type": "Method",
      "url": "/api/class/EditableTextBase#childindextonativechildindex",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_childIndexToNativeChildIndex(index?: number): number",
          "url": "/api/class/EditableTextBase#childindextonativechildindex-childindextonativechildindex-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 419,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "number"
        }
      ]
    },
    "34240": {
      "name": "_addViewToNativeVisualTree",
      "type": "Method",
      "url": "/api/class/EditableTextBase#addviewtonativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_addViewToNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>, atIndex?: number): boolean",
          "url": "/api/class/EditableTextBase#addviewtonativevisualtree-addviewtonativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 424,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Performs the core logic of adding a child view to the native visual tree. Returns true if the view's native representation has been successfully added, false otherwise.\nMethod is intended to be overridden by inheritors and used as \"protected\"."
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            },
            {
              "name": "atIndex",
              "type": "number",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "34244": {
      "name": "_removeViewFromNativeVisualTree",
      "type": "Method",
      "url": "/api/class/EditableTextBase#removeviewfromnativevisualtree",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_removeViewFromNativeVisualTree(view: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#removeviewfromnativevisualtree-removeviewfromnativevisualtree-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 428,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [
            {
              "name": "view",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34247": {
      "name": "_applyXmlAttribute",
      "type": "Method",
      "url": "/api/class/EditableTextBase#applyxmlattribute",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_applyXmlAttribute(attribute: string, value: string): boolean",
          "url": "/api/class/EditableTextBase#applyxmlattribute-applyxmlattribute-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 436,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "This used to be the way to set attribute values in early {N} versions.\nNow attributes are expected to be set as plain properties on the view instances."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "name": "attribute",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "34251": {
      "name": "setInlineStyle",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setinlinestyle",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setInlineStyle(style: string): void",
          "url": "/api/class/EditableTextBase#setinlinestyle-setinlinestyle-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 437,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "style",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34254": {
      "name": "_parentChanged",
      "type": "Method",
      "url": "/api/class/EditableTextBase#parentchanged",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_parentChanged(oldParent: <a href=\"/api/class/ViewBase\">ViewBase</a>): void",
          "url": "/api/class/EditableTextBase#parentchanged-parentchanged-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 438,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "oldParent",
              "type": "<a href=\"/api/class/ViewBase\">ViewBase</a>",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34257": {
      "name": "onResumeNativeUpdates",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onresumenativeupdates",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "onResumeNativeUpdates(): void",
          "url": "/api/class/EditableTextBase#onresumenativeupdates-onresumenativeupdates-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 439,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34259": {
      "name": "toString",
      "type": "Method",
      "url": "/api/class/EditableTextBase#tostring",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "toString(): string",
          "url": "/api/class/EditableTextBase#tostring-tostring-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 440,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [],
          "returns": "string"
        }
      ]
    },
    "34263": {
      "name": "_inheritStyleScope",
      "type": "Method",
      "url": "/api/class/EditableTextBase#inheritstylescope",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_inheritStyleScope(styleScope: StyleScope): void",
          "url": "/api/class/EditableTextBase#inheritstylescope-inheritstylescope-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 447,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "styleScope",
              "type": "StyleScope",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34266": {
      "name": "_dialogClosed",
      "type": "Method",
      "url": "/api/class/EditableTextBase#dialogclosed",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_dialogClosed(): void",
          "url": "/api/class/EditableTextBase#dialogclosed-dialogclosed-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 468,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34268": {
      "name": "_onRootViewReset",
      "type": "Method",
      "url": "/api/class/EditableTextBase#onrootviewreset",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_onRootViewReset(): void",
          "url": "/api/class/EditableTextBase#onrootviewreset-onrootviewreset-1",
          "sources": [
            {
              "fileName": "@nativescript/core/ui/core/view-base/index.d.ts",
              "line": 472,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method is intended to be overridden by inheritors and used as \"protected\""
              }
            ]
          },
          "parameters": [],
          "returns": "void"
        }
      ]
    },
    "34271": {
      "name": "get",
      "type": "Method",
      "url": "/api/class/EditableTextBase#get",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "get(name: string): any",
          "url": "/api/class/EditableTextBase#get-get-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 84,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gets the value of the specified property."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "any"
        }
      ]
    },
    "34274": {
      "name": "setProperty",
      "type": "Method",
      "url": "/api/class/EditableTextBase#setproperty",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "setProperty(name: string, value: any): void",
          "url": "/api/class/EditableTextBase#setproperty-setproperty-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 92,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Updates the specified property with the provided value and raises a property change event and a specific change event based on the property name."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34278": {
      "name": "once",
      "type": "Method",
      "url": "/api/class/EditableTextBase#once",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "once(event: string, callback: (data: <a href=\"/api/interface/EventData\">EventData</a>) => void, thisArg?: any): void",
          "url": "/api/class/EditableTextBase#once-once-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 106,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds one-time listener function for the event named "
              },
              {
                "kind": "code",
                "text": "`event`"
              },
              {
                "kind": "text",
                "text": "."
              }
            ]
          },
          "parameters": [
            {
              "name": "event",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Name of the event to attach to."
                  }
                ]
              }
            },
            {
              "name": "callback",
              "type": "(data: <a href=\"/api/interface/EventData\">EventData</a>) => void",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to be called when the specified event is raised."
                  }
                ]
              }
            },
            {
              "name": "thisArg",
              "type": "any",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An optional parameter which when set will be used as \"this\" in callback method call."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34286": {
      "name": "notify",
      "type": "Method",
      "url": "/api/class/EditableTextBase#notify",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notify&lt;T&gt;(data: T): void",
          "url": "/api/class/EditableTextBase#notify-notify-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 140,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notify this Observable instance with some data. This causes all event\nhandlers on the Observable instance to be called, as well as any 'global'\nevent handlers set on the instance's class."
              }
            ]
          },
          "parameters": [
            {
              "name": "data",
              "type": "T",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "an object that satisfies the EventData interface, though with\nan optional 'object' property. If left undefined, the 'object' property\nwill implicitly be set as this Observable instance."
                  }
                ]
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34290": {
      "name": "notifyPropertyChange",
      "type": "Method",
      "url": "/api/class/EditableTextBase#notifypropertychange",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "notifyPropertyChange(name: string, value: any, oldValue?: any): void",
          "url": "/api/class/EditableTextBase#notifypropertychange-notifypropertychange-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 145,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Notifies all the registered listeners for the property change event."
              }
            ]
          },
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "void"
        }
      ]
    },
    "34295": {
      "name": "hasListeners",
      "type": "Method",
      "url": "/api/class/EditableTextBase#haslisteners",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "hasListeners(eventName: string): boolean",
          "url": "/api/class/EditableTextBase#haslisteners-haslisteners-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 150,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checks whether a listener is registered for the specified event name."
              }
            ]
          },
          "parameters": [
            {
              "name": "eventName",
              "type": "string",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the event to check for."
                  }
                ]
              }
            }
          ],
          "returns": "boolean"
        }
      ]
    },
    "34298": {
      "name": "_createPropertyChangeData",
      "type": "Method",
      "url": "/api/class/EditableTextBase#createpropertychangedata",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_createPropertyChangeData(propertyName: string, value: any, oldValue?: any): <a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>",
          "url": "/api/class/EditableTextBase#createpropertychangedata-createpropertychangedata-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 154,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "This method is intended to be overriden by inheritors to provide additional implementation."
              }
            ]
          },
          "parameters": [
            {
              "name": "propertyName",
              "type": "string",
              "flags": {}
            },
            {
              "name": "value",
              "type": "any",
              "flags": {}
            },
            {
              "name": "oldValue",
              "type": "any",
              "flags": {
                "isOptional": true
              }
            }
          ],
          "returns": "<a href=\"/api/interface/PropertyChangeData\">PropertyChangeData</a>"
        }
      ]
    },
    "34303": {
      "name": "_emit",
      "type": "Method",
      "url": "/api/class/EditableTextBase#emit",
      "flags": {},
      "inheritedFrom": {
        "fromName": "TextBase"
      },
      "signatures": [
        {
          "type": "CallSignature",
          "code": "_emit(eventNames: string): void",
          "url": "/api/class/EditableTextBase#emit-emit-1",
          "sources": [
            {
              "fileName": "@nativescript/core/data/observable/index.d.ts",
              "line": 155,
              "character": 4
            }
          ],
          "inheritedFrom": {
            "fromName": "TextBase"
          },
          "parameters": [
            {
              "name": "eventNames",
              "type": "string",
              "flags": {}
            }
          ],
          "returns": "void"
        }
      ]
    }
  }
}